# 回测脚本重构规则

## 核心原则

### 1. 请一直保持用中文答复，在每次答复之前，以“//”开始，后面紧接着你的答复。


### 2. 不要在代码中硬编码，不要新创建任何文件和数据，如果必须要创建，请征求我的同意。


### 3. 除非得到我允许，不要在代码中硬编码，不要新增任何函数，不要修改任何原始的输入文件
- **优先修改现有方法**: 在保证功能正确的前提下，尽量减少对现有代码的修改
- **保持接口兼容性**: 确保修改后的方法与原方法具有相同的参数和返回值


### 4.PowerShell不支持&&操作符，PowerShell命令行需要分开执行


### 5. 渐进式重构原则
- **问题分析优先**: 先分析问题根源，理解系统行为，再进行重构
- **分阶段实施**: 制定明确的重构计划，分阶段实施
- **持续验证**: 每完成一个阶段就进行测试验证，确保系统正常工作

### 6. 向后兼容原则
- **接口稳定**: 保持接口稳定，不改变方法的签名
- **输出一致**: 确保输出格式和内容与原系统一致
- **功能保全**: 在添加新功能时，确保不影响现有功能

### 7. 功能验证原则
- **一致性验证**: 验证重构后的系统功能与原始系统一致
- **输出验证**: 验证输出文件的格式和内容# 回测脚本重构规则


### 11. 保持代码简单，精简
- **关键指标比较**: 比较关键指标的计算结果
- **验证标准**: 定义明确的验证标准
- **行为比较**: 比较重构前后的系统行为
- **结果记录**: 记录验证结果和差异

### 8. 配置管理原则
- **集中管理**: 集中管理配置信息，提高系统的灵活性和可维护性
- **环境支持**: 支持不同环境（开发、测试、生产）的配置
- **验证功能**: 提供配置验证功能
- **避免硬编码**: 使用配置文件管理路径和参数，避免硬编码
- **配置验证**: 验证配置的有效性
- **默认配置**: 为配置项提供合理的默认值，提高系统的容错能力

### 9. 配置集中管理原则
- **避免硬编码**: 使用配置文件管理路径和参数，避免硬编码
- **配置验证**: 提供配置验证功能，确保配置的有效性
- **默认配置**: 为配置项提供合理的默认值，提高系统的容错能力

### 10. 数据流理解原则
- **全面数据映射**: 必须仔细、完整、全面、准确地获取原始项目的所有数据详细信息
- **路径追踪**: 记录所有数据文件的最终路径，包括中间文件和输出文件
- **流程细节**: 捕获数据流程的所有细节，包括数据的生成、转换和消费过程
- **依赖全景图**: 建立数据依赖的全景图，明确数据之间的上下游关系
- **数据特性**: 记录数据的内容、类型、格式和结构
- **源头与衍生**: 区分源头数据和衍生数据，理解数据的生成逻辑
- **关系网络**: 梳理数据之间最详细的关系，包括主键、外键和引用关系
- **函数交互**: 记录数据和函数之间最详细的关系，包括哪些函数读取、修改和生成哪些数据
- **依赖细节**: 分析数据与函数的依赖性细节，理解数据变化对系统的影响

### 11. 保持代码简单，精简







```

